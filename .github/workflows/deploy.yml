name: Deploy to Server

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Upload project to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          source: "."
          target: ${{ secrets.DEPLOY_PROJECT_DIR }}
          overwrite: true

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USER }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            PROJECT_DIR=${{ secrets.DEPLOY_PROJECT_DIR }}
            mkdir -p "$PROJECT_DIR"
            cd "$PROJECT_DIR"

            # Write fresh .env from secret (single source of truth)
            if [ -n "${{ secrets.DEPLOY_ENV_FILE }}" ]; then
              printf "%s" "${{ secrets.DEPLOY_ENV_FILE }}" > .env
            fi
            
            # Restart prod stack via Makefile
            make prod-restart


